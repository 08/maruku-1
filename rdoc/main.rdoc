= Maruku

Maruku is a Markdown-superset interpreter.

Maruku implements:

* The original Markdown syntax.
* All the improvements in PHP Markdown Extra.
* A new meta-data syntax.

More documentation about Maruku can be found
on the project's website: http://maruku.rubyforge.org

== Basic use 

The basic use is to create a new document, and then write
its HTML representation with the method +to_html+:

    doc = Maruku.new(markdown_string)
    puts doc.to_html

Method MaRuKu::MDDocument::to_html() returns a string, representing only an HTML fragment.

    Maruku.new("## Header ##").to_html 
    # => "<h2 id='header'>header</h2>"

This is useful to use Maruku inside other programs. 

If you want to create whole HTML documents, use the function +to_html_document+.

=== Errors management

Maruku has a real parser, so it warns you if something
is wrong with the input. 

The default behaviour is to warn by printing a message 
on the standard error, and then try to continue.

You can change this behaviour. If you create the #Maruku 
object in this way:

    Maruku.new(string, {:on_error => :raise})

then Maruku will raise an exception.

To change the error stream, use this construct:

    errors = "Errors reported by Maruku:\n" 
    Maruku.new(invalid, {:error_stream => errors})

You can pass any object that supports operator << .

== Command-line usage

There are two command-line programs installed: +maruku+ and +marutex+.

+maruku+ converts Markdown to HTML:

    $ maruku file.md  # creates file.html

+marutex+ converts Markdown to LaTeX, then calls +pdflatex+ to 
transform to PDF:

    $ marutex file.md  # creates file.tex and file.pdf

== Code organization 

The main interface is class #Maruku. Everything else is
in the module #MaRuKu. 

